# This is a basic workflow to help you get started with Actions
name: CI - build agent

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  workflow_dispatch:
    inputs:
      environment:
        description: 'Build configuration'
        required: true
        default: 'debug'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Validate build conditions
      - name: Validate build conditions
        run: |
          if (("${{ github.event.inputs.environment }}" -ne "debug") -and ("${{ github.event.inputs.environment }}" -ne "release"))
          {
            echo "Valid build configurations only: [debug] [release]"
            echo "Selected configuration: [${{ github.event.inputs.environment }}]"
            exit 1
          }

      # Check build variables
      - name: ${{ github.event.inputs.environment }} - Build variables and environment
        run: |
          echo "Configuration: [${{ github.event.inputs.environment }}]"
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      ##################################################
      # .Net Framework 4.8 Setups
      ##################################################
      # Setting up msbuild for Net Framework
      - name: .Net Fx - Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
        
      # Setting up NugGet.exe for Net Framework
      - name: .Net Fx - Setup NuGet.exe
        uses: NuGet/setup-nuget@v1.0.5
        
      ##################################################
      # .Net Fx Nuget Restore and Installation
      ##################################################
      # Restore Nuget Packages
      - name: .Net Fx - Restore nuget packages
        run: nuget restore GithubActionsTests.sln

      # Install .Net Fx Nunit ConsoleRunner
      - name: .Net Fx - Install NUnit.ConsoleRunner
        run: nuget install NUnit.ConsoleRunner -Version 3.13.0 -DirectDownload -OutputDirectory .        

      ##################################################
      # .Net Core SDK Setups
      ##################################################
      # Setup .Net Core SDK
      - name: .Net Core - Setup
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
        
      ##################################################
      # .Net Core Nuget Package and Dependencies Setup
      ##################################################
      # Restore Nugets and dependencies
      - name: .Net Core - Restore nuget and dependencies
        run: dotnet restore
      
      ##################################################
      # Solution Build
      # Both .Net Fx and .Net Core will be build here
      ##################################################
      - name: Build
        run: dotnet build --configuration ${{ github.event.inputs.environment }} --no-restore

      ##################################################
      # .Net Fx Unit Tests
      ##################################################
      - name: .Net Fx Unit Tests
        run: ./NUnit.ConsoleRunner.3.13.0/tools/nunit3-console.exe  ./UnitTest.Net48Console/bin/${{ github.event.inputs.environment }}/UnitTest.Net48Console.dll

      ##################################################
      # .Net Core Unit Tests
      ##################################################
      - name: .Net Core Unit Tests
        run: dotnet test --configuration ${{ github.event.inputs.environment }} --no-build --verbosity normal
